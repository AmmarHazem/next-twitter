// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String         @id @default(auto()) @map("_id") @db.ObjectId
  name            String?
  userName        String         @unique
  email           String         @unique
  emailVerified   DateTime?
  image           String?
  coverImage      String?
  profileImage    String?
  bio             String?
  hashedPassword  String
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  followingIDs    String[]       @db.ObjectId
  hasNotification Boolean
  posts           Post[]
  comments        Comment[]
  notifications   Notification[]
}

model Post {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  body      String
  updatedAt DateTime  @updatedAt
  createdAt DateTime  @default(now())
  userID    String    @db.ObjectId
  likedIDs  String[]  @db.ObjectId
  user      User      @relation(fields: [userID], references: [id], onDelete: Cascade)
  comments  Comment[]
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  body      String
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
  userID    String   @db.ObjectId
  postID    String   @db.ObjectId
  user      User     @relation(fields: [userID], references: [id], onDelete: Cascade)
  post      Post     @relation(fields: [postID], references: [id], onDelete: Cascade)
}

model Notification {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  body      String
  userID    String   @db.ObjectId
  user      User     @relation(fields: [userID], references: [id])
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}
